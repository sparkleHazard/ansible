---
# ansible/roles/base/tasks/main.yml

# Ensure rsync is installed for different operating systems.

- name: Ensure rsync is installed on Debian/Ubuntu
  package:
    name: rsync
    state: present
  when: ansible_os_family == "Debian"

- name: Ensure rsync is installed on RedHat/CentOS/Fedora
  package:
    name: rsync
    state: present
  when: ansible_os_family == "RedHat"

- name: Ensure rsync is installed on macOS using Homebrew
  community.general.homebrew:
    name: rsync
    state: present
  when: ansible_os_family == "Darwin"

# Task group for systems using Homebrew (macOS and Linux)
- name: Check if Homebrew is installed
  shell: "command -v brew"
  register: brew_check
  ignore_errors: yes
  changed_when: false
  when: ansible_os_family in ["Darwin", "Linux"]

- name: Install Homebrew if not present (macOS or Linux)
  shell: |
    echo "Homebrew not found. Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  args:
    executable: /bin/bash
  when:
    - ansible_os_family in ["Darwin", "Linux"]
    - brew_check.rc != 0

- name: Update Homebrew
  shell: brew update
  args:
    executable: /bin/bash
  when: ansible_os_family in ["Darwin", "Linux"]

- name: Install common packages using Homebrew
  shell: |
    brew install curl git vim neovim htop btop nvtop mise
  args:
    executable: /bin/bash
  when: ansible_os_family in ["Darwin", "Linux"]

# Fallback for systems that are not Darwin or Linux (if needed)
- name: Update system packages on non-Homebrew systems
  package:
    name:
      - curl
      - git
      - vim
      - htop
    state: latest
  when: ansible_os_family not in ["Darwin", "Linux"]

# Ensure zsh is installed

- name: Install zsh on Debian/Ubuntu
  package:
    name: zsh
    state: present
  when: ansible_os_family == "Debian"

- name: Install zsh on RedHat/CentOS/Fedora
  package:
    name: zsh
    state: present
  when: ansible_os_family == "RedHat"

- name: Install zsh on Darwin (macOS) using Homebrew
  community.general.homebrew:
    name: zsh
    state: present
  when: ansible_os_family == "Darwin"

# Set the default shell to zsh for the target user
#
# You can define a variable 'target_user' (for example, in host_vars or defaults)
# that specifies which user should have zsh as the default shell.
#
# Here, we use the ansible_env.USER variable if it's not root.
- name: Set default shell to zsh for target user
  user:
    name: "{{ target_user }}"
    shell: /bin/zsh
  vars:
    # If not defined elsewhere, default to ansible_env.USER
    target_user: "{{ (ansible_env.USER | default('')) | lower }}"
  when: target_user != 'root' and target_user != ""
